@model Infrastructure.Models.Activos

@{
    ViewBag.Title = "Editar";
}

<h2>Editar Activo</h2>


@using (Html.BeginForm("Save", "Activo", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ActivoID)

    <div class="form-group">
        @Html.LabelFor(model => model.NumeroSerie, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NumeroSerie, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NumeroSerie, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Modelo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Modelo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Modelo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FechaCompra, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FechaCompra, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FechaCompra, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FechaVencimientoSeguro, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FechaVencimientoSeguro, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FechaVencimientoSeguro, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FechaVencimientoGarantia, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FechaVencimientoGarantia, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FechaVencimientoGarantia, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CostoColones, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CostoColones, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CostoColones, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CostoDolares, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CostoDolares, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CostoDolares, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CondicionActivo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            Excelente @Html.RadioButtonFor(model => model.CondicionActivo, "Excelente", new { Checked = true })
            Bueno @Html.RadioButtonFor(model => model.CondicionActivo, "Bueno", new { htmlAttributes = new { @class = "form-control" } })
            Regular @Html.RadioButtonFor(model => model.CondicionActivo, "Regular", new { htmlAttributes = new { @class = "form-control" } })
            Malo @Html.RadioButtonFor(model => model.CondicionActivo, "Malo", new { htmlAttributes = new { @class = "form-control" } })

            @Html.ValidationMessageFor(model => model.CondicionActivo, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.FotoFactura, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="col-md-10">
                <input type="image" src="data:image/jpeg;charset=utf-8;base64,@Convert.ToBase64String(Model.FotoFactura)" id="ImagenProducto" style="height:75px;width:75px">
            </div>
            <input type="file" name="ImageFile" required />
            @*Hay que colocarlo como oculto para que se pueda volver a enviar!*@
            @Html.HiddenFor(model => model.FotoFactura)
            @*
        @Html.EditorFor(model => model.Imagen, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Imagen, "", new { @class = "text-danger" })*@
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FotoActivo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="col-md-10">
                <input type="image" src="data:image/jpeg;charset=utf-8;base64,@Convert.ToBase64String(Model.FotoActivo)" id="ImagenProducto" style="height:75px;width:75px">
            </div>
            <input type="file" name="ImageFile" required />
            @*Hay que colocarlo como oculto para que se pueda volver a enviar!*@
            @Html.HiddenFor(model => model.FotoActivo)
            @*
        @Html.EditorFor(model => model.Imagen, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Imagen, "", new { @class = "text-danger" })*@
        </div>
    </div>

    @*MARCA*@
    <div class="form-group">
        @Html.LabelFor(model => model.Marca, "MarcaID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Marca", new SelectList(ViewBag.ListaMarca, "MarcaID", "Descripcion"), htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Marca, "", new { @class = "text-danger" })
        </div>
    </div>

    @*VENDEDOR*@
    <div class="form-group">
        @Html.LabelFor(model => model.Vendedor, "VendedorID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Vendedor", new SelectList(ViewBag.ListaVendedor, "VendedorID", "Descripcion"), htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Vendedor, "", new { @class = "text-danger" })
        </div>
    </div>

    @*ASEGURADOR*@
    <div class="form-group">
        @Html.LabelFor(model => model.Asegurador, "AseguradorID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Asegurador", new SelectList(ViewBag.ListaAsegurador, "AseguradorID", "Descripcion"), htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Asegurador, "", new { @class = "text-danger" })
        </div>
    </div>

    @*TIPO DE ACTIVO*@
    <div class="form-group">
        @Html.LabelFor(model => model.TipoActivo, "TipoActivoID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("TipoActivo", new SelectList(ViewBag.ListaTipoActivo, "TipoActivoID", "Descripcion"), htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TipoActivo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ValorActual, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ValorActual, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ValorActual, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.VidaUtil, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.VidaUtil, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.VidaUtil, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Guardar cambios" class="btn btn-primary" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Regresar", "Index", null, new { @class = "btn btn-danger" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
