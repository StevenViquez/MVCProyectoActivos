@model Infrastructure.Models.Activos

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@*@using (Html.BeginForm("Save", "Activo", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {*@

@using (Ajax.BeginForm("Save", "Activo", null, new AjaxOptions
{

    HttpMethod = "GET",
    OnBegin = "onBeginSubmit",
}, new { id = "AjaxForm", enctype = "multipart/form-data" }))
{


    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Activos</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.NumeroSerie, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumeroSerie, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumeroSerie, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Modelo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Modelo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Modelo, "", new { @class = "text-danger" })
            </div>
        </div>

        @*FECHA DE COMPRA>*@
        <div class="form-group">
            @Html.LabelFor(model => model.FechaCompra, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @* Html.EditorFor(model => model.FechaInclusion, new { htmlAttributes = new { @class = "form-control" ,   @readonly = "true", @Value = DateTime.Now} })*@
                @Html.EditorFor(model => model.FechaCompra, new { @id = "FechaCompra", htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FechaCompra, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.FechaVencimientoSeguro, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FechaVencimientoSeguro, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FechaVencimientoSeguro, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FechaVencimientoGarantia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FechaVencimientoGarantia, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FechaVencimientoGarantia, "", new { @class = "text-danger" })
            </div>
        </div>

        @*COLONES*@
        <div class="form-group">
            @Html.LabelFor(model => model.CostoColones, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CostoColones, new { @id = "CostoColones", htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CostoColones, "", new { @class = "text-danger" })
            </div>
        </div>

        @*DOLAR*@
        <div class="form-group">
            @Html.LabelFor(model => model.CostoDolares, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CostoDolares, new { htmlAttributes = new { @id = "precioDolar", @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.CostoDolares, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CondicionActivo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                Excelente @Html.RadioButtonFor(model => model.CondicionActivo, "Excelente", new { Checked = true })
                Bueno @Html.RadioButtonFor(model => model.CondicionActivo, "Bueno", new { htmlAttributes = new { @class = "form-control" } })
                Regular @Html.RadioButtonFor(model => model.CondicionActivo, "Regular", new { htmlAttributes = new { @class = "form-control" } })
                Malo @Html.RadioButtonFor(model => model.CondicionActivo, "Malo", new { htmlAttributes = new { @class = "form-control" } })

                @Html.ValidationMessageFor(model => model.CondicionActivo, "", new { @class = "text-danger" })
            </div>
        </div>


        @*FOTO DE FACTURA*@
        <div class="form-group">
            @Html.LabelFor(model => model.FotoFactura, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="ImageFile" required />
                @*
                    @Html.EditorFor(model => model.Imagen, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Imagen, "", new { @class = "text-danger" })*@
            </div>
        </div>

        @*FOTO DE ACTIVO*@
        <div class="form-group">
            @Html.LabelFor(model => model.FotoActivo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="ImageFile" required />
                @*
                    @Html.EditorFor(model => model.Imagen, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Imagen, "", new { @class = "text-danger" })*@
            </div>
        </div>

        @*MARCA*@
        <div class="form-group">
            @Html.LabelFor(model => model.Marca, "MarcaID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Marca", new SelectList(ViewBag.ListaMarca, "MarcaID", "Descripcion"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Marca, "", new { @class = "text-danger" })
            </div>
        </div>

        @*VENDEDOR*@
        <div class="form-group">
            @Html.LabelFor(model => model.Vendedor, "VendedorID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Vendedor", new SelectList(ViewBag.ListaVendedor, "VendedorID", "Descripcion"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Vendedor, "", new { @class = "text-danger" })
            </div>
        </div>

        @*ASEGURADOR*@
        <div class="form-group">
            @Html.LabelFor(model => model.Asegurador, "AseguradorID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Asegurador", new SelectList(ViewBag.ListaAsegurador, "AseguradorID", "Descripcion"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Asegurador, "", new { @class = "text-danger" })
            </div>
        </div>

        @*TIPO DE ACTIVO*@
        <div class="form-group">
            @Html.LabelFor(model => model.TipoActivo, "TipoActivoID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TipoActivo", new SelectList(ViewBag.ListaTipoActivo, "TipoActivoID", "Descripcion"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TipoActivo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ValorActual, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ValorActual, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ValorActual, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VidaUtil, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VidaUtil, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VidaUtil, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn  btn-success" data-toggle="tooltip" data-placement="top" title="Save" />

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" id="btnEvent" value="test" />

            </div>
        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        // Habilita los tooltips
        $(function () {
            $('[data-toggle="tooltip"]').tooltip()
        })
    </script>

    @* Function is in charge of populating 'precioDolar' text input
        based on date and value entered in "Colones", the function send a post response
        with Colones valuea as well as Fecha compra date, once at Controller site the
        action result "Dolar" make a Dolar request to ApplicationCore >> DTOS >> ServiceBCCR which will
        return a decimal value with the conversion DOLAR<>COLONES value as requested. Once the action
        result "Dolar" receives the value "Dolar" this value is used to divide "Precio Colones" in order
        to get "Activo" price in dolard on real time.

        Keyup: https://api.jquery.com/keyup/
        Change: https://api.jquery.com/change/
    *@

    <script>
            $(function()
            {
                $('#CostoColones, #FechaCompra').on('keyup change',function () {


                    var precioColones = $('#CostoColones').val();

                    var fechaDeCompra = $('#FechaCompra').val();

                    console.log(precioColones);

                    var url = "@Url.Action("Dolar","Activo")";
                    $.post(url + "?fechaDeCompra=" + fechaDeCompra + "&costoColones=" + precioColones, function (response) {
                    if(response.Status==="success")
                    {
                        $("#precioDolar").val(response.Dolar);
                    }
                    else
                    {
                        alert("Invalid respose");
                    }
                    });
                });
            });
    </script>





    @*https://stackoverflow.com/questions/34502189/change-value-of-editorfor-on-dropdownfor-value-change*@
}
